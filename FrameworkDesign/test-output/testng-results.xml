<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="3" total="7" passed="3" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-06-14T10:50:44 IST" name="Suite" finished-at="2023-06-14T10:51:01 IST" duration-ms="16762">
    <groups>
      <group name="Regression">
        <method signature="ForgetPasswordTest.EmailCheck()[pri:0, instance:test.ForgetPasswordTest@1046d517]" name="EmailCheck" class="test.ForgetPasswordTest"/>
        <method signature="LoginModuleTest.InvalidLoginValidPassword()[pri:0, instance:test.LoginModuleTest@ca30bc1]" name="InvalidLoginValidPassword" class="test.LoginModuleTest"/>
        <method signature="RegistrationModuleTest.LoginNameValid()[pri:0, instance:test.RegistrationModuleTest@146dfe6]" name="LoginNameValid" class="test.RegistrationModuleTest"/>
        <method signature="RegistrationModuleTest.MobileFieldValidation()[pri:0, instance:test.RegistrationModuleTest@146dfe6]" name="MobileFieldValidation" class="test.RegistrationModuleTest"/>
      </group> <!-- Regression -->
    </groups>
    <test started-at="2023-06-14T10:50:44 IST" name="Test" finished-at="2023-06-14T10:51:01 IST" duration-ms="16762">
      <class name="test.ForgetPasswordTest">
        <test-method is-config="true" signature="ApplicationNavigation()[pri:0, instance:test.ForgetPasswordTest@1046d517]" started-at="2023-06-14T10:50:58 IST" name="ApplicationNavigation" finished-at="2023-06-14T10:51:01 IST" duration-ms="3025" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ApplicationNavigation -->
        <test-method signature="EmailCheck()[pri:0, instance:test.ForgetPasswordTest@1046d517]" started-at="2023-06-14T10:51:01 IST" name="EmailCheck" finished-at="2023-06-14T10:51:01 IST" duration-ms="627" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- EmailCheck -->
      </class> <!-- test.ForgetPasswordTest -->
      <class name="test.LoginModuleTest">
        <test-method is-config="true" signature="ApplicationNavigation()[pri:0, instance:test.LoginModuleTest@ca30bc1]" started-at="2023-06-14T10:50:54 IST" name="ApplicationNavigation" finished-at="2023-06-14T10:50:57 IST" duration-ms="2661" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ApplicationNavigation -->
        <test-method signature="InvalidLoginValidPassword()[pri:0, instance:test.LoginModuleTest@ca30bc1]" started-at="2023-06-14T10:50:57 IST" name="InvalidLoginValidPassword" finished-at="2023-06-14T10:50:58 IST" duration-ms="861" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- InvalidLoginValidPassword -->
      </class> <!-- test.LoginModuleTest -->
      <class name="test.RegistrationModuleTest">
        <test-method is-config="true" signature="ApplicationNavigation()[pri:0, instance:test.RegistrationModuleTest@146dfe6]" started-at="2023-06-14T10:50:44 IST" name="ApplicationNavigation" finished-at="2023-06-14T10:50:50 IST" duration-ms="5777" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ApplicationNavigation -->
        <test-method signature="LoginNameValid()[pri:0, instance:test.RegistrationModuleTest@146dfe6]" started-at="2023-06-14T10:50:50 IST" name="LoginNameValid" finished-at="2023-06-14T10:50:54 IST" duration-ms="3342" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginNameValid -->
        <test-method signature="MobileFieldValidation()[pri:0, instance:test.RegistrationModuleTest@146dfe6]" started-at="2023-06-14T10:50:54 IST" name="MobileFieldValidation" finished-at="2023-06-14T10:50:54 IST" duration-ms="69" status="FAIL">
          <exception class="org.openqa.selenium.UnhandledAlertException">
            <message>
              <![CDATA[unexpected alert open: {Alert text : Login Name Already Exist!}
  (Session info: chrome=114.0.5735.110): Login Name Already Exist!
Build info: version: '4.9.0', revision: 'd7057100a6'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [c5eaa207b92ce2df8755a1f44aeeb4c7, findElement {using=link text, value=eTicket Login}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 114.0.5735.110, chrome: {chromedriverVersion: 114.0.5735.90 (386bc09e8f4f..., userDataDir: C:\Users\vjred\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:52530}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:52530/devtoo..., se:cdpVersion: 114.0.5735.110, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: c5eaa207b92ce2df8755a1f44aeeb4c7]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.UnhandledAlertException: unexpected alert open: {Alert text : Login Name Already Exist!}
  (Session info: chrome=114.0.5735.110): Login Name Already Exist!
Build info: version: '4.9.0', revision: 'd7057100a6'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [c5eaa207b92ce2df8755a1f44aeeb4c7, findElement {using=link text, value=eTicket Login}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 114.0.5735.110, chrome: {chromedriverVersion: 114.0.5735.90 (386bc09e8f4f..., userDataDir: C:\Users\vjred\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:52530}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:52530/devtoo..., se:cdpVersion: 114.0.5735.110, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: c5eaa207b92ce2df8755a1f44aeeb4c7
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:131)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:53)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:193)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:183)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:158)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:162)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:60)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:352)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:344)
at objectRepository.HomePageRepo.EticketLogin(HomePageRepo.java:23)
at test.RegistrationModuleTest.MobileFieldValidation(RegistrationModuleTest.java:85)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.UnhandledAlertException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobileFieldValidation -->
      </class> <!-- test.RegistrationModuleTest -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
